{"version":3,"sources":["global/GlobalStyles.js","global/Colors.js","components/header/styles.js","components/header/index.js","components/navegation/styles.js","components/cards/styles.js","services/api.js","components/cards/index.js","components/navegation/index.js","components/nation/styles.js","components/nation/index.js","global/routes/routes.js","App.js","index.js"],"names":["createGlobalStyle","HeaderStyled","styled","header","Header","useState","dark","setDark","mode","className","type","onClick","icon","faMoon","faLightbulb","NavegationStyled","div","CardStyled","api","axios","create","baseURL","Cards","props","homeInfo","setHomeInfo","useEffect","a","async","get","response","data","loadApiHomeInfos","search","region","filter","el","includes","name","toLowerCase","map","key","to","alpha3Code","src","flag","alt","population","capital","Navegation","setSearch","setRegion","faSearch","value","onChange","e","target","placeholder","NationStyled","Nation","parents","setParents","id","match","params","nationName","preventDefault","history","goBack","faArrowLeft","nativeName","subregion","topLevelDomain","currencies","currencie","languages","language","borders","border","Routes","exact","path","component","App","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.56e6ba8a.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\nimport { PrimaryBackground } from './Colors';\r\n\r\nexport default createGlobalStyle`\r\n\r\n@import url('https://fonts.googleapis.com/css?family=Roboto:400,700&display=swap');\r\n\r\n    * {\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n\r\n    body {\r\n        font-family: Roboto, sans-serif;\r\n        background-color: ${PrimaryBackground};\r\n    }\r\n`;","\r\n\r\n// background colors\r\nexport const PrimaryBackground = '#fafafa';\r\nexport const SecundaryBackground = '#ffffff';\r\n\r\n// text colors\r\nexport const PrimaryTextColor = '#2d2d2d';\r\nexport const SecundaryTextColor = '#777777';","import styled from 'styled-components';\r\nimport { SecundaryBackground, PrimaryTextColor } from '../../global/Colors';\r\n\r\nexport const HeaderStyled = styled.header`\r\n    div.header {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        padding: 20px 40px;\r\n        background-color: ${SecundaryBackground};\r\n        -webkit-box-shadow: 0px 2px 9px -4px rgba(212,212,212,1);\r\n        -moz-box-shadow: 0px 2px 9px -4px rgba(212,212,212,1);\r\n        box-shadow: 0px 2px 9px -4px rgba(212,212,212,1);\r\n\r\n        h1{\r\n            font-size: 24px;\r\n            color: ${PrimaryTextColor};\r\n            font-family: Roboto, sans-serif;\r\n            font-style: bold;\r\n        }\r\n\r\n        button {\r\n            background-color: transparent;\r\n            border: none;\r\n            color: ${PrimaryTextColor};\r\n            font-family: Roboto, sans-serif;\r\n            font-size: 14px;\r\n            cursor: pointer;\r\n            outline: none;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 375px) {\r\n        div.header {\r\n            flex-wrap: wrap;\r\n            justify-content: center;\r\n            button {\r\n                margin-top: 20px;\r\n            }\r\n        }\r\n    }\r\n`;","import React, { useState } from 'react';\r\nimport { HeaderStyled } from './styles';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faMoon, faLightbulb } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Header = () => {\r\n\r\n    const [ dark, setDark ] = useState('light');\r\n\r\n    function darkMode() {\r\n        dark === 'light' ? setDark('dark') : setDark('light');\r\n    }\r\n\r\n    return(\r\n        <HeaderStyled mode={dark}>\r\n            <div className=\"header\">\r\n                <h1>Where in the world?</h1>\r\n                <button \r\n                type=\"button\" \r\n                onClick={darkMode}>\r\n                    <FontAwesomeIcon icon={dark === 'light' ? faMoon : faLightbulb } /> {`${dark === 'light' ? 'Dark': 'Light'}`} Mode\r\n                </button>\r\n            </div>\r\n        </HeaderStyled>\r\n    );\r\n}\r\n\r\nexport default Header;","import styled from 'styled-components';\r\n\r\nimport { SecundaryTextColor, SecundaryBackground } from '../../global/Colors';\r\n\r\nexport const NavegationStyled = styled.div`\r\n\r\n    .navegation {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        flex-wrap: wrap;\r\n        padding: 40px 50px;\r\n\r\n        div {\r\n            -webkit-box-shadow: 0px 2px 9px -4px rgba(212,212,212,1);\r\n            -moz-box-shadow: 0px 2px 9px -4px rgba(212,212,212,1);\r\n            box-shadow: 0px 2px 9px -4px rgba(212,212,212,1);\r\n            background-color: ${SecundaryBackground};\r\n            padding: 5px 20px;\r\n            border-radius: 3px;\r\n\r\n            svg {\r\n                color: ${SecundaryTextColor};\r\n                margin-right: 15px;\r\n            }\r\n        }\r\n\r\n        input {\r\n            width: 400px;\r\n            height: 40px;\r\n            padding: 0 10px;\r\n            border: none;\r\n        }\r\n\r\n        input:focus {\r\n            border: none;\r\n            outline: none;\r\n        }\r\n\r\n        .select-wrapper {\r\n            display: inline-block;\r\n            position: relative;\r\n        }\r\n\r\n        .select-wrapper:after {\r\n            content: '';\r\n            width: 0;\r\n            position: absolute;\r\n            right: 20px;\r\n            top: 50%;\r\n            margin-top: -3px;\r\n            border-width: 6px 4px;\r\n            border-style: solid;\r\n            pointer-events: none;\r\n            border-color: darkslategrey transparent transparent transparent;\r\n            -webkit-box-shadow: 0px 2px 9px -4px rgba(212,212,212,1);\r\n            -moz-box-shadow: 0px 2px 9px -4px rgba(212,212,212,1);\r\n            box-shadow: 0px 2px 9px -4px rgba(212,212,212,1);\r\n        }\r\n\r\n        select.region {\r\n            height: 40px;\r\n            padding: 0 10px;\r\n            outline: none;\r\n            border: 0;\r\n            width: 200px;\r\n            font-family: Roboto, sans-serif;\r\n            color: ${SecundaryTextColor};\r\n            -moz-appearance: none;\r\n            -webkit-appearance: none;\r\n            appearance: none;\r\n            background-color: transparent;\r\n        }\r\n\r\n        select:active {\r\n            outline: none;\r\n            -moz-appearance: none;\r\n            -webkit-appearance: none;\r\n            appearance: none;\r\n            background-color: none;\r\n        }\r\n\r\n        select:focus {\r\n            outline: none;\r\n            -moz-appearance: none;\r\n            -webkit-appearance: none;\r\n            appearance: none;\r\n            background-color: none;\r\n        }\r\n\r\n        select::-ms-expand{\r\n            display:none;  //FOR IE\r\n        }\r\n    }\r\n\r\n    @media (max-width: 845px){\r\n        .navegation {\r\n            justify-content: flex-start !important;\r\n\r\n            div {\r\n                margin-bottom: 20px;\r\n            }\r\n        }\r\n    }\r\n\r\n    @media (max-width: 609px){\r\n        .navegation {\r\n            input {\r\n                width: 300px;\r\n            }\r\n        }\r\n    }\r\n\r\n    @media (max-width: 507px){\r\n        .navegation {\r\n            input {\r\n                width: 200px;\r\n            }\r\n        }\r\n    }\r\n\r\n    @media (max-width: 407px){\r\n        .navegation {\r\n            input {\r\n                width: 100px;\r\n            }\r\n        }\r\n    }\r\n`\r\n","import styled from 'styled-components';\r\n\r\nimport { SecundaryBackground, PrimaryTextColor, SecundaryTextColor } from '../../global/Colors';\r\n\r\nexport const CardStyled = styled.div `\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n\r\n    a {\r\n        text-decoration: none;\r\n        font-family: Roboto, sans-serif;\r\n        color: ${PrimaryTextColor};\r\n        width: 250px;\r\n        height: 330px;\r\n        margin-bottom: 30px;\r\n        margin-right: 10px;\r\n        margin-left: 10px;\r\n    }\r\n\r\n    .card {\r\n        display: block;\r\n        width: 250px;\r\n        height: 330px;\r\n        padding-bottom: 5px;\r\n        margin-bottom: 30px;\r\n        border-radius: 4px;\r\n        background-color: ${SecundaryBackground};\r\n        -webkit-box-shadow: 0px 2px 9px -4px rgba(212,212,212,1);\r\n        -moz-box-shadow: 0px 2px 9px -4px rgba(212,212,212,1);\r\n        box-shadow: 0px 2px 9px -4px rgba(212,212,212,1);\r\n\r\n            img {\r\n                width: 250px;\r\n                height: 150px;\r\n                border-top-left-radius: 4px;\r\n                border-top-right-radius: 4px;\r\n            }\r\n\r\n        h3 {\r\n            padding: 10px 20px;\r\n        }\r\n\r\n        div.text-flex {\r\n            display: flex;\r\n            padding: 5px 20px;\r\n\r\n            span {\r\n                margin-left: 3px;\r\n                color: ${SecundaryTextColor};\r\n            }\r\n        }\r\n    }\r\n`;","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: 'https://restcountries.eu/rest/v2'\r\n});\r\n\r\nexport default api;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { CardStyled } from \"./styles\";\r\nimport api from \"../../services/api\";\r\n\r\nconst Cards = (props) => {\r\n  const [homeInfo, setHomeInfo] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function loadApiHomeInfos() {\r\n      const response = await api.get(\r\n        \"/all?fields=alpha3Code;capital;name;flag;population;region;\"\r\n      );\r\n      setHomeInfo(response.data);\r\n    }\r\n    loadApiHomeInfos();\r\n  }, []);\r\n\r\n  // filtro por região e por pesquisa de nome.\r\n  const search =\r\n    props.search !== \"\" || props.region !== \"\"\r\n      ? homeInfo\r\n          .filter((el) => el.region.includes(props.region))\r\n          .filter((el) =>\r\n            el.name.toLowerCase().includes(props.search.toLowerCase())\r\n          )\r\n      : homeInfo;\r\n  return (\r\n    <>\r\n      <CardStyled>\r\n        {search.map((el) => (\r\n          <Link key={el.name} to={`/nation/${el.alpha3Code}`}>\r\n            <div className=\"card\">\r\n              <img src={el.flag} alt=\"\" />\r\n              <h3>{el.name}</h3>\r\n              <div className=\"text-flex\">\r\n                <p>Population:</p>\r\n                <span>{el.population}</span>\r\n              </div>\r\n              <div className=\"text-flex\">\r\n                <p>Region:</p>\r\n                <span>{el.region}</span>\r\n              </div>\r\n              <div className=\"text-flex\">\r\n                <p>Capital:</p>\r\n                <span>{el.capital}</span>\r\n              </div>\r\n            </div>\r\n          </Link>\r\n        ))}\r\n      </CardStyled>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { NavegationStyled } from './styles';\r\nimport Cards from '../cards/index';\r\n\r\nconst Navegation = () => {\r\n\r\n    const [search, setSearch] = useState('');\r\n    const [ region, setRegion] = useState('');\r\n\r\n    function nationSearch(e){\r\n        setSearch(e.target.value);\r\n    }\r\n\r\n    function sortRegion(e) {\r\n\r\n        switch(e.target.value) {\r\n            case '1':\r\n                setRegion('Africa');\r\n            break;\r\n            case '2':\r\n                setRegion('America');\r\n            break;\r\n            case '3':\r\n                setRegion('Asia');\r\n            break;\r\n            case '4':\r\n                setRegion('Europe');\r\n            break;\r\n            case '5':\r\n                setRegion('Oceania');\r\n            break;\r\n            default:\r\n                setRegion('');\r\n            break;\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <NavegationStyled>\r\n                <div className=\"navegation\">\r\n                    <div>\r\n                        <FontAwesomeIcon icon={faSearch}/>\r\n                        <input type=\"text\" value={search} onChange={nationSearch} placeholder=\"Search for a country..\"></input>\r\n                    </div>\r\n                    <div className=\"select-wrapper\">\r\n                        <select name=\"sort-by-region\" className=\"region\" onChange={sortRegion}>\r\n                            <option value=\"0\">Filter by region</option>\r\n                            <option value=\"1\">África</option>\r\n                            <option value=\"2\">America</option>\r\n                            <option value=\"3\">Asia</option>\r\n                            <option value=\"4\">Europa</option>\r\n                            <option value=\"5\">Oceania</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </NavegationStyled>\r\n            <Cards search={search} region={region}/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Navegation;","import styled from 'styled-components';\r\n\r\nimport { PrimaryTextColor, SecundaryTextColor, SecundaryBackground} from '../../global/Colors';\r\n\r\nexport const NationStyled = styled.div`\r\n\r\n    .button-container {\r\n        width: 1050px;\r\n        margin: auto;\r\n        margin-top: 40px;\r\n\r\n        button {\r\n        border: none;\r\n        background-color: ${SecundaryBackground};\r\n        -webkit-box-shadow: 0px 2px 9px -4px rgba(212,212,212,1);\r\n        -moz-box-shadow: 0px 2px 9px -4px rgba(212,212,212,1);\r\n        box-shadow: 0px 2px 9px -4px rgba(212,212,212,1);\r\n        padding: 10px 30px;\r\n        cursor: pointer;\r\n\r\n            svg {\r\n                margin-right: 10px;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    .nation-container {\r\n        display: flex;\r\n        width: 1050px;\r\n        margin: auto;\r\n        margin-top: 30px;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n\r\n        img {\r\n            width: 500px;\r\n        }\r\n\r\n        #nation-name {\r\n            font-size: 25px;\r\n        }\r\n\r\n    }\r\n\r\n    div.borders {\r\n        margin-top: 20px;\r\n        width: 500px;\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        a {\r\n            text-decoration: none;\r\n            color: ${PrimaryTextColor};\r\n            margin-left: 5px;\r\n            padding: 5px 30px;\r\n            -webkit-box-shadow: 0px 2px 9px -4px rgba(212,212,212,1);\r\n            -moz-box-shadow: 0px 2px 9px -4px rgba(212,212,212,1);\r\n            box-shadow: 0px 2px 9px -4px rgba(212,212,212,1);\r\n        }\r\n    }\r\n\r\n    .text-flex-nation {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        width: 500px;\r\n        margin-top: 20px;\r\n\r\n        .nation-text-info {\r\n            div {\r\n                display: flex;\r\n                margin-top: 10px;\r\n\r\n                p {\r\n                    font-family: Roboto, sans-serif;\r\n                    color: #000;\r\n                }\r\n\r\n                span {\r\n                    color: ${SecundaryTextColor};\r\n                    margin-left: 5px;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    @media (max-width: 1083px){\r\n        \r\n        .button-container {\r\n            width: 500px;\r\n        }\r\n\r\n        .nation-container {\r\n            flex-wrap: wrap;\r\n            width: 500px;\r\n\r\n            .nation-info {\r\n                margin-top: 20px;\r\n            }\r\n\r\n        }\r\n\r\n        div.borders {\r\n            margin-bottom: 20px;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 545px) {\r\n        .button-container {\r\n            width: 400px;\r\n        }\r\n\r\n        .nation-container {\r\n            width: 400px;\r\n\r\n            img {\r\n                width: 400px;\r\n            }\r\n\r\n            .text-flex-nation {\r\n                width: 400px;\r\n            }\r\n\r\n            div.borders {\r\n                width: 400px;\r\n            }\r\n        }\r\n    }\r\n\r\n    @media (max-width: 440px) {\r\n        .button-container {\r\n            width: 300px;\r\n        }\r\n\r\n        .nation-container {\r\n            width: 300px;\r\n\r\n            img {\r\n                width: 300px;\r\n            }\r\n\r\n            .text-flex-nation {\r\n                width: 300px;\r\n                flex-wrap: wrap;\r\n                \r\n            }\r\n\r\n            div.borders {\r\n                width: 300px;\r\n            }\r\n        }\r\n    }\r\n\r\n    @media (max-width: 333px) {\r\n        .button-container {\r\n            width: 200px;\r\n        }\r\n\r\n        .nation-container {\r\n            width: 200px;\r\n\r\n            img {\r\n                width: 200px;\r\n            }\r\n\r\n            .text-flex-nation {\r\n                width: 200px;\r\n                flex-wrap: wrap;\r\n                font-size: 14px;\r\n            }\r\n\r\n            div.borders {\r\n                width: 200px;\r\n            }\r\n        }\r\n    }\r\n`;","import React, { useState, useEffect } from 'react';\r\nimport api from '../../services/api';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { NationStyled } from './styles';\r\n\r\nconst Nation = (props) => {\r\n\r\n    const [ parents, setParents ] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function nationName() {\r\n            const { id } = props.match.params;\r\n            const response = await api.get(`/alpha/${id}`);\r\n            setParents([response.data]);\r\n        }\r\n        nationName();\r\n    },[props.match.params])\r\n\r\n    function goBack(e){\r\n        e.preventDefault();\r\n        props.history.goBack();\r\n    }\r\n\r\n    return(\r\n        <NationStyled>\r\n            <div className=\"button-container\">\r\n                <button type=\"button\" onClick={goBack}>{<FontAwesomeIcon icon={faArrowLeft} />} Back</button>\r\n            </div>\r\n        {parents.map(el => (\r\n            <div key={el.name} className=\"nation-container\">\r\n                <img src={el.flag} alt=\"\"/>\r\n                <div className=\"nation-info\">\r\n                    <strong id=\"nation-name\">{el.name}</strong>\r\n                    <div className=\"text-flex-nation\">\r\n                        <div className=\"nation-text-info\">\r\n                            <div>\r\n                                <p>Native name: </p><span>{el.nativeName}</span>\r\n                            </div>\r\n                            <div>\r\n                                <p>Population: </p><span>{el.population}</span>\r\n                            </div>\r\n                            <div>\r\n                                <p>Region: </p><span>{el.region}</span>\r\n                            </div>\r\n                            <div>\r\n                                <p>Sub Region: </p><span>{el.subregion}</span>\r\n                            </div>\r\n                            <div>\r\n                                <p>Capital: </p><span>{el.capital}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"nation-text-info\">\r\n                            <div>\r\n                                <p>Top Level Domain: </p><span>{el.topLevelDomain}</span>\r\n                            </div>\r\n                            <div>\r\n                                <p>Currencies: </p><span>{el.currencies.map( currencie => (\r\n                                    currencie.name\r\n                                ))}</span>\r\n                            </div>\r\n                            <div>\r\n                                <p>Languages: </p>{el.languages.map(language => (\r\n                                    <span key={language.name}>{`${language.name} `}</span>\r\n                                ))}\r\n                            </div>                       \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"borders\">\r\n                        <p>Boarders: </p>{el.borders.map(border => (\r\n                            <Link key={border} to={`/nation/${border}`}>{border}</Link>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ))}\r\n\r\n        </NationStyled>\r\n    );\r\n}\r\n\r\nexport default Nation;","import React from \"react\";\r\nimport {\r\n  BrowserRouter,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\nimport Navegation from '../../components/navegation/index';\r\nimport Nation from '../../components/nation/index';\r\n\r\nconst Routes = () => (\r\n    <BrowserRouter>\r\n        <Switch>\r\n            <Route exact path=\"/\" component={Navegation}/>\r\n            <Route path=\"/nation/:id\" component={Nation}/>\r\n        </Switch>\r\n    </BrowserRouter>\r\n)\r\n\r\nexport default Routes;\r\n\r\n","import React from 'react';\n\nimport GlobalStyles from './global/GlobalStyles';\nimport Header from './components/header/index';\nimport Routes from './global/routes/routes';\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyles/>\n      <div className=\"App\">\n        <Header/>\n        <Routes/>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}